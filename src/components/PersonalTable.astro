---
// Obtencion de los partes desde el backend
const response = await fetch('http://localhost:3001/personal'); 
let personal = [];

if (response.ok) {
  personal = await response.json();
} else {
  console.error("Error fetching personal:", response.statusText);
}
---

<style>
  table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
  }
  th, td {
    border: 1px solid #ddd;
    padding: 8px;
  }
  th {
    background-color: #ff3333;
    color: #fff;
  }
  tr:hover {
    background-color: #f5f5f5;
  }
</style>

<table>
  <thead>
    <tr>
      <th>Legajo</th>
      <th>Nombre y Apellido</th>
      <th>Documento</th>
      <th>Fecha de nacimiento</th>
      <th>Fecha de ingreso</th>
      <th>Jerarquia</th>
    </tr>
  </thead>
  <tbody>
    {personal.length > 0 ? (
      personal.map((rrhh) => (
        <tr key={rrhh.legajo}>
          <td>{rrhh.legajo}</td>
          <td>{rrhh.nombre_completo}</td>
          <td>{rrhh.documento}</td>
          <td>{rrhh.nacimiento}</td>
          <td>{rrhh.fecha_ingreso}</td>
          <td>{rrhh.jerarquia}</td>
        </tr>
      ))
    ) : (
      <tr>
        <td colspan="8">No hay datos de personal disponibles</td> {}
      </tr>
    )}
  </tbody>
</table>

<div class="pagination">
  <button class="load-more">Cargar más</button>
</div>

<div class="actions-bottom">
  <button class="add-btn">Agregar nuevo</button>
  <button class="edit-btn">Modificar</button>
  <button class="delete-btn">Borrar</button>
</div>
</section>

<style>
.emergency-section {
  padding: 1rem;
}

.actions, .actions-bottom {
  display: flex;
  gap: 1rem;
  margin-bottom: 1rem;
}

.emergency-table {
  width: 100%;
  border-collapse: collapse;
  margin-bottom: 1rem;
}

.emergency-table th, .emergency-table td {
  border: 1px solid #ddd;
  padding: 0.5rem;
  text-align: left;
}

.pagination {
  display: flex;
  justify-content: center;
  margin-top: 1rem;
}

.add-btn, .edit-btn, .delete-btn {
  background-color: #007bff;
  color: #fff;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 5px;
  cursor: pointer;
}

.delete-btn {
  background-color: #ff4d4d;
}
</style>

<script>
const loadMoreButton = document.querySelector('.load-more');
loadMoreButton.addEventListener('click', () => {
// Lógica para cargar más registros en la tabla
});

const addButton = document.querySelector('.add-btn');
const editButton = document.querySelector('.edit-btn');
const deleteButton = document.querySelector('.delete-btn');

// Lógica para agregar, editar y borrar registros
addButton.addEventListener('click', () => {
//  modal para agregar nuevo registro
});

editButton.addEventListener('click', () => {
  // modal para modificar el registro seleccionado
});

deleteButton.addEventListener('click', () => {
  // Confirmación para borrar el registro seleccionado
});
</script>